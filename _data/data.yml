#
# Be aware that even a small syntax error here can lead to failures in output.
#

sidebar:
    position: right # position of the sidebar : left or right
    about: True # set to False or comment line if you want to remove the "how to use?" in the sidebar
    education: True # set to False if you want education in main section instead of in sidebar

    # Profile information
    name: 이철진
    tagline: 백엔드 개발자
    avatar: profile.jpg  #place a 100x100 picture inside /assets/images/ folder and provide the name of the file below

    # Sidebar links
    email: ironjin92@gmail.com
    phone: 010-8966-9169
    timezone:
    citizenship:
    website: iron-jin.tistory.com
    # linkedin: alandoe
    xing:
    github: github.com/jaydenchuljinlee
    telegram: # add your nickname without '@' sign
    gitlab:
    bitbucket:
    twitter:
    stack-overflow: # Number/Username, e.g. 123456/alandoe
    codewars:
    goodreads: # Number-Username, e.g. 123456-alandoe
    # pdf: 20231028_resume.pdf

career-profile:
    motivation: "꾸준함과 지속 가능성, 그리고 개발"
    title: 소개 (3년 4개월)
    summary: |
      &nbsp; <b>MAU 400명, 총 이용 고객 9000</b>명 서비스의 초창기 Backend 개발자로 참여했습니다. 비록 이용자 수는 적었지만, 개발자로서 고객에게 더 좋은 서비스를 제공하기 위해 <b>성능 개선</b>에 대한 많은 고민을 하고 있으며, 느리지만 <b>꾸준하게 이어나가는 개발 열정</b>을 가지고 있습니다.
      
      &nbsp; <b>꾸준함</b>이라는 말을 항상 지키고 싶어하고, <b>지속 가능한 개발자</b>가 되기 위해 공부하는 것을 게을리 하지 않고 있습니다. 이러한 <b>꾸준함과 성장</b>으로 인해, 대외적으로 서비스 메인 화면 조회 시 <b>JPA 연관 관계 이슈</b>로 정보 질의가 늦어져 사용자 불편이 야기되었던 <b>질의 시간을 3초 감소</b>했고,
      빌드 시 <b>Spring Test에서 Context 이슈</b>로 인해 느려졌던 <b>빌드 시간을 30초 감소</b>하는 등의 성과를 냈습니다.
      
      &nbsp; <b>서비스 개발</b>은 나 자신의 코드만 신경쓰며 만드는 것이 아닌, <b>팀 구성원들과 같이 만들어 가는 것</b>이라 생각합니다. 트렌드라서 문화를 따라가는 것이 아닌, <b>지속 가능한 소통</b>이 주가 되어 <b>동료와 같이 성장</b>한다는 마인드로 <b>즐거운 리뷰 문화</b>를 만들고싶습니다.
education:
    title: 교육
    info:
      - degree: 경영정보학 학사
        university: 경기대학교
        time: 2013 - 2018
        details: |
          Describe your study here lorem ipsum dolor sit amet, consectetuer
          adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum
          sociis natoque penatibus et magnis dis parturient montes, nascetur
          ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu,
          pretium quis, sem.
            - Bullet point
            - Bullet point

experiences:
    title: 경력 사항
    tublesuitting:
      title: 이슈 정리 매모
      url: shard-othnielia-ba2.notion.site/9e3016cd213c4e3b81f09b4618acf80c
    company:
      - name: 비브릭
        duration: 2021.10 - 현재
        info:
          - role: 대시보드 서버 개발및 인프라 구축
            time: 2023.08 - 2023.10
            company:
            details: |
              &nbsp; <i><b>Web 대시보드 서비스 구현을 목적으로,  API 서버 개발 및 AWS 를 통한 Infra Structrue 구축</b></i>
                - Vue.js로 채팅 서비스 UI를 구축하면서 채널 / 메시지의 다양한 이벤트들에 대한 중복 코드에 대한 이슈를 <b>템플릿 메서드 패턴과 콜백 패턴</b>을 결합하여 채팅 이벤트에 대한 재사용성을 높이는데 기여
                - <b>차트 데이터 분석</b>을 위해 <b>대용량의 데이터와 유연한 스키마 처리</b>가 가능하면서도 <b>JSON 형식의 파일 형태</b>로 저장이 가능한 document DB인 <b>AWS의 DynamoDB</b>를 채택하여 개발
                - API 서버 개발 및 AWS를 통한 Public Cloud 네트워크 구축
                - 사용 스택
                  - Spring Boot 2.7 + kotlin 1.6 / JPA / QueryDSL
                  - Rest Docs / Swagger
                  - AWS EC2, RDS, VPC
                  - Jenkins(CI/CD)
          - role: 블록체인 부동산 조각 투자 플랫폼 비브릭
            time: 2021.10 - 2023.06
            company: 비브릭
            details: |
              &nbsp; <i><b>회원 메시지 전송 및 청약 / 거래 관련 프로세스 처리 서버 개발</b></i>
                - 푸시 알람 발송을 위해 firebase admin SDK를 사용하여 메시지를 보내는 도중 드문 경우로 <a href="https://shard-othnielia-ba2.notion.site/d179ac218b2e432794c9874f523bb295" target="_blank" style="color: #3232ea"><b>메시지가 유실되는 이슈</b></a>가 있었고, 중간에 <b>Queue 서버</b>를 두어 중간에 서버에서 메시지 처리 도중 에러로 인하여
                  메시지가 유실되더라도 후처리가 가능하게끔 <b>로그로 기록하여 메시지 유실에 대한 이슈 해결</b>
                - 청약 / 거래에 사용되는 펀드 관련 테이블들의 JPA 연관 관계에서 올바르지 못한 사용으로 인해 <a href="https://shard-othnielia-ba2.notion.site/JPA-N-1-76584d21a2874095b61957a944d3d272" target="_blank" style="color: #3232ea"><b>N+1 쿼리 발생으로 인한가 메인 화면 조회 속도 저하 이슈</b></a>가 발생했었고, <b>JPA 라이브러리 레벨에서의 디버깅</b>을 통해 엔티티 프로퍼티가 조회될 때, 연관관계의 프로퍼티가 같이 조회되는 부분을 발견했고,
                  해당 펀드 관련 테이블에 대한 <b>연관관계 재설계 및 QueryDSL</b>을 통해 해당 이슈를 해결했고 결과적으로 <b>메인 화면의 조회 시간을 3초 감소</b>
              
              &nbsp; <i><b>서비스 안정화를 위한 리팩토링과 문서화</b></i>
                - <a href="https://shard-othnielia-ba2.notion.site/MSA-API-7c54a64dc9564376abcd5016083300f3" target="_blank" style="color: #3232ea"><b>MSA 환경에서 API 요청 기록</b></a>을 각각의 서버에서 남기는 <b>boiler plate 코드</b>가 많은 이슈가 있었고, 해당 기록을 담당하는 Filter에서 RequestBody를 읽기 위해 특정 클래스를 구현하게 되면 불필요한 코드가 보여 가시성이 떨어지는 이슈가 있었고, 이를 하나의 GateWay에서 제공하는 <b>ModifyRequestBodyGatewayFilterFactory</b>를 통해 간단하게 구현했고, <b>로깅에 대한 의존성</b>을 떨어뜨리기 위해 <b>Queue 서버</b>를 중간에 두어 <b>확실한 도메인 경계</b>를 나누는데 기여
                - RestDocs + Swagger UI를 통해 MSA 환경에서 API 명세를 한 곳에서 관리할 수 있는 <a href="https://shard-othnielia-ba2.notion.site/MSA-API-4c77bfbea12f44668059762890685e7c" target="_blank" style="color: #3232ea"><b>자동화 문서관리 프로세스</b></a>를 구축하여 구성원 간의 효과적인 소통에 기여
                - Spring Test가 진행되면서 Context를 반복해서 띄우게 됨으로 <a href="https://shard-othnielia-ba2.notion.site/Test-d4db6150d21b4171bf945ea612078e8c" target="_blank" style="color: #3232ea"><b>빌드 시간이 오래 걸리는 이슈</b></a>가 있었고, 원인이었던 <b>@WebMvcTest를 하나의 추상 클래스</b>로 만들어 확장하게 했고, 무분별한 @MockBean / @SpyBean 사용으로 인해 빈 재생성이 생기는 문제를 <b>테스트 관심사 분리</b>를 통해 @Bean을 사용하는 테스트 클래스를 최소화하여 <b>전체 빌드 시간을 30초 감소</b>하는데 기여

              &nbsp; <i><b>Web3j와 Solidity를 활용한 Smart Contract 서버 개발</b></i>
                - 비즈니스 서비스 로직 요청과 블록체인 트랜잭션이 등록되기까지 1초 남짓 <b>시간적 괴리 이슈</b>가 있었고, 이를 <b>반복 횟수 패턴</b>을 통해 응답을 받을 수 있도록 했으며,
                  실패 혹은 반복 횟수를 넘어서는 요청에 대해서는 <b>실패 로그</b>를 남기고 전체 <b>트랜잭션 전파 범위를 롤백</b>할 수 있도록하는 방향으로 이슈 처리
                - 컴파일 상에서는 발생하지 않고 배포 시에 <a href="https://shard-othnielia-ba2.notion.site/Web3j-472f1438a8a14a56b836c75ed1878cc7" target="_blank" style="color: #3232ea"><b>Transaction Fail이 일어나는 Struct 타입에 대한 이슈</b></a>를 <b>Byte Code 단위의 분석</b>과 타입에 대한 <b> UseCase 작성</b>을 통해 팀원들의 개발 시간을 단축하고 프로젝트 조기 완료에 기여
                - <b>Proxy Contract</b> 설계를 통해 변경이 불가능한 블록체인 구조를 유연하게 사용이 가능하도록 구현하여 확장성 있는 블록체인 구조 구축

              &nbsp; 사용 스택
                - Spring Boot 2.7 + kotlin 1.6 / JPA / QueryDSL
                - Solidity / Web3j / Hyperledger BESU
                - MySql / Redis
                - Rest Docs / Swagger
                - AWS EC2, RDS, SQS
                - Jenkins(CI/CD)
      - name: 와치텍
        duration: 2020.07 - 2021.10
        info:
          - role: API 서버 개발 및 기획
            time:
            company: 와치텍
            details: |
                - Public Cloud Metric 지표를 통해 성능 조회 API 개발
                - Kubernetes 성능 조회 API 개발
                - vue.js를 통해 대시보드 차트 위젯 개발
                - 고객사에 필요한 성능 정보를 어떻게 보여줄지에 대한 개발 기획 및 화면 설계서 작성
                - 사용 스택
                  - Java, Spring, Mybatis
                  - Vue.js
                  - MySQL
                  - AWS, NAVER Cloud Flatform, KT Cloud








certifications:
      title: 자격 사항
      list:
        - name: 정보처리기사
          start: 2020
          end: 
          organization: 국가공인
          credentialid: 
          credentialurl: 
          credentialname: 
          details: 

skills:
    title: Skills &amp; Proficiency

    toolset:
      - name: Java & kotlin & Spring
        level: 98%

      - name: Javascript & Vue
        level: 70%

      - name: HTML5 & CSS
        level: 50%

      - name: MySQL & Redis
        level: 80%

      - name: Docker & Kubernetes
        level: 70%
